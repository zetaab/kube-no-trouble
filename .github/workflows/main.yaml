name: main
on:
  push:
    branches:
    - master
    tags:
    - "*"
  pull_request:
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v2.0.0
  test:
    name: test
    runs-on: ubuntu-latest
    container: golang:1.16.2-alpine3.12
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Test
      run: |
        scripts/alpine-setup.sh
        make test
  build:
    name: build
    runs-on: ubuntu-latest
    container: golang:1.16.2-alpine3.12
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build
        run: |
          scripts/alpine-setup.sh
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make all
          make changelog
        shell: sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive release artifacts
        uses: actions/upload-artifact@v1
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
  create-release:
    name: Create Release
    needs:
      [test, pre-commit, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release-artifacts-linux
          path: release-artifacts
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          release_name: ${{ steps.get_tag.outputs.git_tag }}
          body_path: ./release-artifacts/changelog.md
          draft: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') != true }}
          prerelease: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') }}
  release-artifacts:
    name: Relase Artifacts
    needs:
      [create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
      - name: Upload Release Asset - ${{ matrix.os }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release-artifacts/kubent-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_name: kubent-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/tar+gzip
